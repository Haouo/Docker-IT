services:
  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG}
    restart: ${RESTART_POLICY}
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - internal
    env_file:
      - ../env.shared
      - env.mattermost
    environment:
      # timezone inside container
      - TZ
      # necessary Postgres options/variables
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
  mattermost:
    depends_on:
      - postgres
    image: mattermost/${MATTERMOST_IMAGE}:${MATTERMOST_IMAGE_TAG}
    container_name: mattermost
    restart: ${RESTART_POLICY}
    security_opt:
      - no-new-privileges:true
    pids_limit: 200
    read_only: ${MATTERMOST_CONTAINER_READONLY}
    env_file:
      - ../env.shared
      - env.mattermost
    tmpfs:
      - /tmp
    volumes:
      - config:/mattermost/config:rw
      - data:/mattermost/data:rw
      - logs:/mattermost/logs:rw
      - plugins:/mattermost/plugins:rw
      - client_plugins:/mattermost/client/plugins:rw
      - bleve_indexes:/mattermost/bleve-indexes:rw
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority 
      # (link: https://github.com/mattermost/mattermost-server/issues/13059 and https://github.com/mattermost/docker/issues/34)
      # - ${GITLAB_PKI_CHAIN_PATH}:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      # timezone inside container
      - TZ

      # necessary Mattermost options/variables (see env.example)
      - MM_SQLSETTINGS_DRIVERNAME
      - MM_SQLSETTINGS_DATASOURCE

      # necessary for bleve
      - MM_BLEVESETTINGS_INDEXDIR

      # additional settings
      - MM_SERVICESETTINGS_SITEURL
    labels:
      # Traefik Settings
      - 'traefik.enable=true'
      - 'traefik.http.routers.mattermost.entrypoints=websecure'
      - 'traefik.http.routers.mattermost.rule=Host(`mattermost.${ROOT_DOMAIN}`)'
      - 'traefik.http.routers.mattermost.service=mattermost'
      - 'traefik.http.routers.mattermost.tls=true'
      - 'traefik.http.routers.mattermost.tls.certresolver=myresolver'
      - 'traefik.http.services.mattermost.loadbalancer.server.port=8065'
      - com.centurylinklabs.watchtower.enable=true
    networks:
      internal:
      traefik-bridge:
    ports:
      - ${CALLS_PORT}:${CALLS_PORT}/udp
      - ${CALLS_PORT}:${CALLS_PORT}/tcp
volumes:
  dbdata:
  config:
  data:
  logs:
  plugins:
  client_plugins:
  bleve_indexes:
networks:
  internal:
    external: false
  traefik-bridge:
    external: true
