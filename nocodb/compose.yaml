services: 
  app: 
    image: "nocodb/nocodb:latest"
    depends_on: 
      - database
    env_file:
      - ../shared.env
      - env.nocodb
    environment: 
      - "NC_DB=pg://database:5432?u=${DATABASE_USER}&p=${DATABASE_PW}&d=${DATABASE_NAME}"
      - "NC_PUBLIC_URL=https://nocodb.${DOMAINNAME}"
      - NC_DISABLE_TELE=true
    labels: 
      - traefik.enable=true
      - traefik.http.services.nocodb.loadbalancer.server.port=8080
      - "traefik.http.routers.nocodb.rule=Host(`nocodb.${DOMAINNAME}`)"
      - traefik.http.routers.nocodb.entrypoints=websecure
      - traefik.http.routers.nocodb.tls=true
      - traefik.http.routers.nocodb.tls.certresolver=myresolver
      - com.centurylinklabs.watchtower.enable=true
    networks: 
      - traefik-bridge
    restart: always
    volumes: 
      - "data:/usr/app/data"
  database: 
    image: "postgres:12.17-alpine"
    environment: 
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_PASSWORD: "${DATABASE_PW}"
      POSTGRES_USER: "${DATABASE_USER}"
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"
      timeout: 2s
    networks: 
      - traefik-bridge
    restart: always
    volumes: 
      - "db:/var/lib/postgresql/data"
volumes: 
  data: {}
  db: {}
networks:
  traefik-bridge:
    external: true
